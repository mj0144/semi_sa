<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
 <mapper namespace="pay">
 
 
 <!-- 결제 데이터 insert -->
 <insert id="paylistInsert" parameterType="payvo">
 	insert into paylist values(#{merchant_uid}, #{product_num}, #{buyer_num}, #{imp_uid}, #{paid_amount}, #{paid_date}, #{paid_count})
 </insert>
 
 <!-- 단품 상품  -->
 <!-- left_count은 기본권 5개, 원래있던 채팅권 + 추가된 채팅권 -->
 <insert id="singleInsert" parameterType="payvo">
MERGE INTO single_productlist A
    USING (select distinct * from paylist where buyer_num=#{buyer_num} and merchant_uid=#{merchant_uid}) B
    ON (B.buyer_num=A.buyer_num)
WHEN MATCHED THEN 
        UPDATE SET left_count = (select left_count from basic_chat_count where user_id=#{user_id}) 
        + (select left_count from single_productlist where product_num=#{product_num} and buyer_num=#{buyer_num})
        + (#{paid_count}*5)
        , paid_date=#{paid_date}
WHEN NOT MATCHED THEN
        INSERT (product_num, buyer_num, paid_date, left_count) 
        VALUES (#{product_num}, #{buyer_num}, #{paid_date},(select charge_count from product_info where product_num=#{product_num}))
 </insert>
 
 
<!-- 세트 상품  -->
<!-- update때는 원래의 만료일에서 구매한 갯수*30일 만큼 더한 값으로 업데이트. -->
 <insert id="setInsert" parameterType="payvo">
 MERGE INTO set_productlist A
    USING (select distinct * from paylist where buyer_num=#{buyer_num} and merchant_uid=#{merchant_uid}) B
    ON (B.buyer_num=A.buyer_num and B.product_num=A.product_num)
WHEN MATCHED THEN 
        UPDATE SET expiry_date = (select to_char(to_date(a.expiry_date, 'YYYY-MM-DD HH24:MI:SS')+#{paid_count}*30
        ,'YYYY-MM-DD HH24:MI:SS') sdate 
        from (select expiry_date from set_productlist where buyer_num=#{buyer_num}) a)
WHEN NOT MATCHED THEN
        INSERT (product_num, buyer_num, paid_date, expiry_date) 
        VALUES (#{product_num}, #{buyer_num}, #{paid_date}, #{expiry_date})
 </insert> 
 

 

 <select id="selectproduct_info" parameterType="int" resultType="productvo">
 	select * from product_info where product_num=#{product_num}
 </select>
 
 <select id="selectUserId" parameterType="int" resultType="String">
 	select user_id from user_info where user_num=#{user_num}
 </select>
 
 
 </mapper>